"""add relations

Revision ID: 53386ebea694
Revises: 
Create Date: 2022-07-10 20:59:54.307923

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from sqlalchemy import orm

from tgbot.models.restriction import Restriction

revision = '53386ebea694'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ads',
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('tags', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('contacts', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('photos_ids', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('restrictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restriction_name', sa.String(length=64), nullable=False),
    sa.Column('number', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.Column('post_limit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ads_tags',
    sa.Column('tag_name', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['ads.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_name'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tag_name', 'post_id')
    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    default_data = (("Теги", 2),
                    ("Контакты", 2),
                    ("Картинки", 5),
                    ("Постов в день", 3))

    restrictions = [
        Restriction(
            restriction_name=item[0],
            number=item[1]
        ) for item in default_data
    ]
    print(restrictions)

    session.add_all(
        (
            *restrictions,
        )
    )
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ads_tags')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('restrictions')
    op.drop_table('ads')
    # ### end Alembic commands ###
