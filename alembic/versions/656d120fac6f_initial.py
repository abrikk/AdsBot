"""initial

Revision ID: 656d120fac6f
Revises: 
Create Date: 2022-07-14 17:47:52.080144

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from sqlalchemy import orm

from tgbot.models.restriction import Restriction
from tgbot.models.tag import Tag

revision = '656d120fac6f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ads',
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.Column('post_type', sa.String(length=4), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('contacts', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('negotiable', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('photos_ids', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('restrictions',
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('uid', sa.String(length=16), nullable=False),
    sa.Column('restriction_name', sa.String(length=64), nullable=False),
    sa.Column('number', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('order')
    )
    op.create_table('tags',
    sa.Column('tag_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('tag_name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.Column('post_limit', sa.Integer(), nullable=True),
    sa.Column('restricted_till', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ads_tags',
    sa.Column('tag_name', sa.String(length=100), nullable=False),
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['ads.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_name'], ['tags.tag_name'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tag_name', 'post_id')
    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    default_tags = ('продам', 'куплю', 'услуги', 'перевозки')

    default_restrictions = ((1, "tag", "Теги", 2),
                            (2, "contact", "Контакты", 2),
                            (3, "pic", "Картинки", 5),
                            (4, "post", "Посты", 3))

    tags = [Tag(tag_name=tag) for tag in default_tags]

    restrictions = [
        Restriction(
            order=item[0],
            uid=item[1],
            restriction_name=item[2],
            number=item[3]
        ) for item in default_restrictions
    ]

    session.add_all(
        (
            *tags,
            *restrictions
        )
    )
    session.commit()

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ads_tags')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('restrictions')
    op.drop_table('ads')
    # ### end Alembic commands ###
