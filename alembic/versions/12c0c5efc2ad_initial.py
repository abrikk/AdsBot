"""initial

Revision ID: 12c0c5efc2ad
Revises: 
Create Date: 2022-07-19 13:16:38.112142

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from sqlalchemy import orm

from tgbot.models.restriction import Restriction
from tgbot.models.tag_types import Tag

revision = '12c0c5efc2ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ads',
                    sa.Column('status', sa.String(length=16), nullable=True),
                    sa.Column('post_id', sa.BigInteger(), nullable=False),
                    sa.Column('post_type', sa.String(length=4), nullable=True),
                    sa.Column('user_id', sa.BigInteger(), nullable=False),
                    sa.Column('title', sa.String(length=128), nullable=True),
                    sa.Column('description', sa.String(length=1024), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=True),
                    sa.Column('contacts', sa.String(length=128), nullable=False),
                    sa.Column('currency_code', sa.String(length=3), nullable=False),
                    sa.Column('negotiable', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('post_id')
                    )
    op.create_table('restrictions',
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('uid', sa.String(length=16), nullable=False),
                    sa.Column('restriction_name', sa.String(length=64), nullable=False),
                    sa.Column('number', sa.BigInteger(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('uid'),
                    sa.UniqueConstraint('order')
                    )
    op.create_table('tags',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('tag_type', sa.String(length=128), nullable=True),
                    sa.Column('tag_name', sa.String(length=128), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('user_id', sa.BigInteger(), nullable=False),
                    sa.Column('first_name', sa.String(length=100), nullable=False),
                    sa.Column('last_name', sa.String(length=100), nullable=True),
                    sa.Column('username', sa.String(length=100), nullable=True),
                    sa.Column('role', sa.String(length=100), nullable=True),
                    sa.Column('post_limit', sa.Integer(), nullable=True),
                    sa.Column('restricted_till', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('user_id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('ads_tags',
                    sa.Column('tag_id', sa.BigInteger(), nullable=False),
                    sa.Column('post_id', sa.BigInteger(), nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['ads.post_id'], onupdate='CASCADE', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], onupdate='CASCADE', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('tag_id', 'post_id')
                    )
    op.create_table('related_message',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('post_id', sa.BigInteger(), nullable=True),
                    sa.Column('message_id', sa.BigInteger(), nullable=False),
                    sa.Column('photo_file_id', sa.String(length=128), nullable=False),
                    sa.Column('photo_file_unique_id', sa.String(length=64), nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['ads.post_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    default_restrictions = ((1, "tag", "Теги", 2),
                            (2, "contact", "Контакты", 2),
                            (3, "pic", "Картинки", 5),
                            (4, "post", "Посты", 3))

    restrictions = [
        Restriction(
            order=item[0],
            uid=item[1],
            restriction_name=item[2],
            number=item[3]
        ) for item in default_restrictions
    ]

    session.add_all(
        (
            *restrictions,
        )
    )
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('related_message')
    op.drop_table('ads_tags')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('restrictions')
    op.drop_table('ads')
    # ### end Alembic commands ###
