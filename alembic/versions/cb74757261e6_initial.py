"""initial

Revision ID: cb74757261e6
Revises: 
Create Date: 2022-07-27 22:56:51.979250

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from sqlalchemy import orm

from tgbot.models.restriction import Restriction
from tgbot.models.tag_category import TagCategory
from tgbot.models.tags_name import TagName

revision = 'cb74757261e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ads',
                    sa.Column('post_id', sa.BigInteger(), nullable=False),
                    sa.Column('admin_group_message_id', sa.BigInteger(), nullable=True),
                    sa.Column('post_type', sa.String(length=16), nullable=True),
                    sa.Column('user_id', sa.BigInteger(), nullable=False),
                    sa.Column('tag_category', sa.String(length=64), nullable=True),
                    sa.Column('tag_name', sa.String(length=64), nullable=True),
                    sa.Column('description', sa.String(length=1024), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=True),
                    sa.Column('contacts', sa.String(length=128), nullable=False),
                    sa.Column('currency_code', sa.String(length=3), nullable=False),
                    sa.Column('negotiable', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('post_id'),
                    sa.UniqueConstraint('admin_group_message_id')
                    )
    op.create_table('restrictions',
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('uid', sa.String(length=16), nullable=False),
                    sa.Column('restriction_name', sa.String(length=64), nullable=False),
                    sa.Column('number', sa.BigInteger(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('uid'),
                    sa.UniqueConstraint('order')
                    )
    op.create_table('tag_category',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('category', sa.String(length=64), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('category')
                    )
    op.create_table('users',
                    sa.Column('user_id', sa.BigInteger(), nullable=False),
                    sa.Column('first_name', sa.String(length=100), nullable=False),
                    sa.Column('last_name', sa.String(length=100), nullable=True),
                    sa.Column('username', sa.String(length=100), nullable=True),
                    sa.Column('role', sa.String(length=100), nullable=True),
                    sa.Column('posted_today', sa.Integer(), nullable=True),
                    sa.Column('post_limit', sa.Integer(), nullable=True),
                    sa.Column('max_active', sa.Integer(), nullable=True),
                    sa.Column('restricted_till', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=True),
                    sa.PrimaryKeyConstraint('user_id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('related_message',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('post_id', sa.BigInteger(), nullable=False),
                    sa.Column('message_id', sa.BigInteger(), nullable=False),
                    sa.Column('photo_file_id', sa.String(length=128), nullable=False),
                    sa.Column('photo_file_unique_id', sa.String(length=64), nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['ads.post_id'], onupdate='CASCADE', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('message_id')
                    )
    op.create_table('tag_name',
                    sa.Column('id', sa.BigInteger(), nullable=False),
                    sa.Column('category', sa.String(length=64), nullable=True),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.ForeignKeyConstraint(['category'], ['tag_category.category'], onupdate='CASCADE',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('category', 'name', name='unique_tag_name')
                    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    default_categories = ("Товар", "Услуги", "Недвижимость", "Транспорт")

    default_tags = (("Товар", "Бытовое"),
                    ("Товар", "Одежда"),
                    ("Товар", "Гигиена"),
                    ("Товар", "Лекарства"),
                    ("Товар", "Электроника"),
                    ("Товар", "Инструмент"),
                    ("Товар", "Питание"),
                    ("Товар", "Другое"),
                    ("Услуги", "Перевозки"),
                    ("Услуги", "Ремонт"),
                    ("Услуги", "Бьюти"),
                    ("Услуги", "Другое"),
                    ("Недвижимость", "Дом"),
                    ("Недвижимость", "Квартира"),
                    ("Недвижимость", "Дача"),
                    ("Недвижимость", "Участок"),
                    ("Недвижимость", "Гараж"),
                    ("Недвижимость", "Коммерческая"),
                    ("Недвижимость", "Другое"),
                    ("Транспорт", "Авто"),
                    ("Транспорт", "Мото"),
                    ("Транспорт", "Вело"),
                    ("Транспорт", "Запчасти"),
                    ("Транспорт", "Другое"),
                    )

    default_restrictions = ((1, "contact", "Контакты", 2),
                            (2, "pic", "Картинки", 5),
                            (3, "post", "Посты", 3),
                            (4, "max_active", "Макс. объяв.", 5))

    tag_types = [
        TagCategory(category=category_name) for category_name in default_categories
    ]

    tag_names = [
        TagName(
            category=category_name,
            name=tag_name
        ) for category_name, tag_name in default_tags
    ]

    restrictions = [
        Restriction(
            order=item[0],
            uid=item[1],
            restriction_name=item[2],
            number=item[3]
        ) for item in default_restrictions
    ]

    session.add_all(
        (
            *tag_types,
            *tag_names,
            *restrictions,
        )
    )
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag_name')
    op.drop_table('related_message')
    op.drop_table('users')
    op.drop_table('tag_category')
    op.drop_table('restrictions')
    op.drop_table('ads')
    # ### end Alembic commands ###
